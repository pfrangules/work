#!/usr/bin/env python
# encoding: utf-8
# Author: Shawn Roche
# Date: 3/16/2015
#########################
import csv
import argparse
import keyring
import os
from datetime import date

from apperianapi import apperian
import progress


def main():
    username = 'help@apperian.com'
    password = keyring.get_password('ease_ua', username)

    parser = argparse.ArgumentParser(prog='Bulk Org Delete', usage='ease_del_orgs --orgs --env ENVIRONMENT')
    parser.add_argument('--env', default='default', metavar='Environment')
    parser.add_argument('--orgs', default=False, metavar='Orgs List', required=True)
    parser.add_argument('--user', default='')
    parser.add_argument('--verbose', default=False, action='store_true')

    args = parser.parse_args()
    success, failed = [], []
    today = date.today()

    with open('/Users/sroche/AeroFS/Python/work/delete_orgs/whitelist.csv', 'rb') as f:
        whitelist = []
        contents = csv.reader(f, delimiter=',', quotechar='"')
        for row in contents:
            whitelist.append(row[0])

    if '.csv' in args.orgs:
        with open(args.orgs, 'rb') as f:
            org_ids = []
            contents = csv.reader(f, delimiter=',', quotechar='"')
            for row in contents:
                if row[1] not in whitelist:
                    org_ids.append(row)
    else:
        org_ids = [['n/a', x] for x in args.orgs.split(',')]

    total = len(org_ids)
    raw_input('About to delete {} orgs from EASE. Press key to continue.'.format(str(total)))

    ease = apperian.Pyapi(username, password, region=args.env, verbose=args.verbose)
    auth = ease.status
    progress_bar = progress.Bar(total)

    count = 0
    while org_ids and auth == 200:
        delete_request = ease.org_delete(org_ids[-1][1])
        if delete_request['status'] == 401:
            auth = ease.auth()
        else:
            attempted_org = org_ids.pop()
            if delete_request['status'] == 200:
                attempted_org.append(today)
                success.append(attempted_org)
            else:
                attempted_org.append(delete_request['result'])
                failed.append(attempted_org)
            progress_bar.update(count)
            count += 1

    if not auth:
        print 'Unable to authenticate, remaining orgs have been marked failed.'
        failed.extend(org_ids)

    base_path = os.path.expanduser('~/.ease_utils/del_users')
    if not os.path.isfile(base_path):
        os.makedirs(base_path)

    if failed:
        print '{} failed. Check {}/failed_{}.csv for details\n'.format(len(failed), base_path, today)
        with open('{}/failed_{}.csv'.format(base_path, today), 'wb') as f:
            writer = csv.writer(f)
            writer.writerows(failed)

    if success:
        with open('{}/deleted_master.csv', 'ab') as f:
            writer = csv.writer(f)
            writer.writerows(success)
        with open('{}/deleted_{}.csv'.format(base_path, today), 'ab') as f:
            writer = csv.writer(f)
            writer.writerows(success)

if __name__ == '__main__':
    main()
