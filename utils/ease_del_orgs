#!/usr/bin/env python
# encoding: utf-8
# Author: Shawn Roche
# Date: 3/16/2015
#########################
import csv
import argparse
import keyring
import os
from datetime import date, time

import base_class
from apperianapi import apperian
import progress


class DeleteOrgs(base_class.AdminUtilBase):
    def __init__(self, args):
        base_class.AdminUtilBase.__init__(self, os.path.expanduser('~/.ease_utils/del_orgs'))
        self.psks = args.psks
        self.env = args.env
        self.white_list = []
        self.today = date.today()

        self.ease = apperian.Pyapi(args.user, args.pw, region=args.env, verbose=True)

    def build_list(self):
        white_list = []
        with open('{}/whitelist.csv'.format(self.app_path), 'rb') as f:
            contents = csv.reader(f, delimiter=',', quotechar='"')
            for row in contents:
                white_list.append(row[0])

        if '.csv' in self.psks:
            with open(self.psks, 'rb') as f:
                contents = csv.reader(f, delimiter=',', quotechar='"')
                for row in contents:
                    if row[1] not in white_list:
                        self.psks.append(row)
        else:
            self.psks = [['n/a', x] for x in self.psks.split(',')]

    def delete(self):
        total = len(self.psks)
        raw_input('About to delete {} orgs from EASE. Press key to continue.'.format(str(total)))

        count, auth_fail = 0, 0
        progress_bar = progress.Bar(total)
        while self.psks and auth_fail < 3:
            target_org = self.psks[-1]

            raw_input('pause')
            delete_request = self.ease.org_delete(target_org[1])

            if delete_request['status'] == 401:
                auth_fail += 1
                time.sleep(2)
                self.ease.auth()
            else:
                count += 1
                target_org = self.psks.pop()
                if delete_request['status'] == 200:
                    self.success.append(target_org.append(self.today))
                else:
                    self.failed.append(target_org.append(delete_request['result']))

                progress_bar.update(count)

        if self.ease.status != 200:
            print 'Re-authentication failed 3 times, there is an issue with the connection to the server.'
            print delete_request
            print 'Remaining orgs have been marked failed.'

            self.failed.extend(self.psks)


def main():
    parser = argparse.ArgumentParser(prog='Bulk Org Delete', usage='ease_del_orgs --orgs 123,456,789 --env na')
    parser.add_argument('--env', default='default', help='Environment to run against. EX: na, eu')
    parser.add_argument('--psks', required=True,
                        help='Comma separated list of org IDs or path to a csv containing the target org IDs')
    parser.add_argument('--user', default='help@apperian.com',
                        help='Admin account that has the permissions to delete the target orgs')
    parser.add_argument('--pw', default=keyring.get_password('ease_ua', 'help@apperian.com'),
                        help='Password for admin user you are using')
    args = parser.parse_args()

    delete_client = DeleteOrgs(args)

    delete_client.build_list()
    delete_client.delete()
    delete_client.log_results()


if __name__ == '__main__':
    main()
